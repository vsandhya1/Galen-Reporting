table 'Clinical Surveys'
	lineageTag: d737e6d0-7518-43c8-880a-a03939dd8f05

	measure 'Sum Population Current Ground Term' = ```
			
			VAR currdate = TODAY()
			
			-- Get current ground term
			VAR CurrentTerm =
			    CALCULATETABLE(
			        FILTER(
			            'Dim_Terms',
			            'Dim_Terms'[Term_Start_Date] <= currdate &&
			            'Dim_Terms'[Term_End_Date] >= currdate &&
			            'Dim_Terms'[Modality] = "Ground"
			        )
			    )
			
			VAR CurrentTermID = MAXX(CurrentTerm, 'Dim_Terms'[TERMS_ID])
			
			-- Sum population where term matches
			RETURN
			COALESCE(
			    CALCULATE(
			        SUM('Clinical Surveys'[Column1]),
			        'Clinical Surveys'[Sec_Term] = CurrentTermID
			    ),
			    0
			)
			
			```
		formatString: #,0
		lineageTag: 084cbd27-9209-496d-935e-5761076f1c44

	measure 'Sum Population Except Current Term' = ```
			
			VAR currdate = TODAY()
			
			-- Get last ground term
			VAR LastTerm =
			    CALCULATETABLE(
			        TOPN(
			            1,
			            FILTER(
			                'Dim_Terms',
			                'Dim_Terms'[Term_End_Date] < currdate &&
			                'Dim_Terms'[Modality] = "Ground"
			            ),
			            'Dim_Terms'[Term_End_Date], DESC
			        )
			    )
			
			VAR LastTermID = MAXX(LastTerm, 'Dim_Terms'[TERMS_ID])
			
			-- Sum population for all terms except the last ground term
			RETURN
			CALCULATE(
			    SUM('Clinical Surveys'[Column1]),
			    'Clinical Surveys'[Sec_Term] <> LastTermID
			)
			
			```
		formatString: 0
		lineageTag: d1fb23a0-d816-40a3-bb35-bbcb65e5096d

	measure 'Total Population' = ```
			
			SUM('Clinical Surveys'[Column1])
			
			```
		formatString: 0
		lineageTag: 4a1272d5-c8f8-4f35-812a-673354a01236

	measure 'Sum Population Last Year' = ```
			
			VAR currdate = TODAY()
			VAR lastYear = YEAR(currdate) - 1
			
			RETURN
			CALCULATE(
			    SUM('Clinical Surveys'[Column1]),
			    FILTER(
			        'Dim_Terms',
			        'Dim_Terms'[Modality] = "Ground" &&
			        YEAR('Dim_Terms'[Term_Start_Date]) = lastYear
			    ),
			    TREATAS(
			        VALUES('Dim_Terms'[TERMS_ID]),
			        'Clinical Surveys'[Sec_Term]
			    )
			)
			
			```
		formatString: 0
		lineageTag: 098e3bc8-0e60-477b-844c-74c5930c0ed7

	column Column1
		dataType: int64
		formatString: 0
		lineageTag: bd4613d6-d789-42c1-b8d9-be14004a4a1d
		summarizeBy: sum
		sourceColumn: Column1

		annotation SummarizationSetBy = Automatic

	column SEC_TERM
		dataType: string
		lineageTag: e6eb5345-3b46-49d7-a58c-ac2bc45b760a
		summarizeBy: none
		sourceColumn: SEC_TERM

		annotation SummarizationSetBy = Automatic

	column SEC_LOCATION
		dataType: string
		lineageTag: 71b2636e-2c9e-473b-bd2b-186dd9a3feb4
		summarizeBy: none
		sourceColumn: SEC_LOCATION

		annotation SummarizationSetBy = Automatic

	partition 'Clinical Surveys' = m
		mode: import
		source =
				let
				    Source = Sql.Database("rpt2-prod.ec.galencollege.edu", "coll18_repl_production", [Query="SELECT #(lf)COUNT(*) #(lf), CS.SEC_TERM, CS.SEC_LOCATION#(lf)--SCS.SCS_STUDENT, A.SCS_ABSENT_DATES, CS.SEC_NAME, R.ROOM_TYPE, CSM.*#(lf)FROM STUDENT_COURSE_SEC SCS #(lf)INNER JOIN COURSE_SECTIONS CS ON SCS.SCS_COURSE_SECTION = CS.COURSE_SECTIONS_ID#(lf)INNER JOIN COURSE_SECTIONS_LS CLS ON CS.COURSE_SECTIONS_ID = CLS.COURSE_SECTIONS_ID#(lf)INNER JOIN CALENDAR_SCHEDULES CAL ON CLS.SEC_CALENDAR_SCHEDULES = CAL.CALENDAR_SCHEDULES_ID#(lf)INNER JOIN TERMS T ON CS.SEC_TERM = T.TERMS_ID#(lf)INNER JOIN COURSE_SEC_MEETING CSM ON CAL.CALS_COURSE_SEC_MEETING = CSM.COURSE_SEC_MEETING_ID#(lf)INNER JOIN ROOMS R ON CONCAT(CSM.CSM_BLDG, '*', CSM.CSM_ROOM) = R.ROOMS_ID#(lf)INNER JOIN SCS_ATTENDANCE A ON SCS.STUDENT_COURSE_SEC_ID = A.STUDENT_COURSE_SEC_ID AND A.SCS_ABSENT_DATES + A.SCS_ATTENDANCE_START_TIMES = CAL.CALS_DATE + CALS_START_TIME#(lf)WHERE 1=1#(lf)AND RIGHT(SEC_COURSE_NO, 1) = 'C' -- CLINICAL INDICATOR#(lf)AND R.ROOM_TYPE = 'HC' --HCA INDICATOR#(lf)AND T.TERM_START_DATE >= '2024-04-04' --2024SUQ START, WHEN QUALTRICS WENT LIVE#(lf)AND UPPER(CSM.CSM_ROOM) NOT IN ('ZOOM', 'HCACC') --NO ZOOM ROOMS, NO HCACC (CALL CENTERS)#(lf)--AND CSM.CSM_INSTR_METHOD = 'CLN'#(lf)--AND CS.SEC_LOCATION = 'SAN'#(lf)--AND CS.SEC_TERM = '2024WIQ'#(lf)--AND CS.COURSE_SECTIONS_ID = 100651#(lf)GROUP BY  CS.SEC_TERM, CS.SEC_LOCATION#(lf)ORDER BY SEC_TERM#(lf)"])
				in
				    Source

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

