table NCLEX
	lineageTag: 88f2fdff-7003-433d-b32f-ee000e28c020

	measure FirstAttempt_PN = ```
			CALCULATE(SUM(NCLEX[first_attempt_pass]),NCLEX[STNC_PCT] = 1,
			NCLEX[TestTypeDesc] = "NCLEX PN")
			
			```
		formatString: 0
		lineageTag: a02fbb6e-7027-428f-b34a-9f0e66cd2ce0

		changedProperty = IsHidden

	measure CountFirstAttempts_PN = ```
			
			CALCULATE(
			    COUNTROWS('NCLEX'),
			    'NCLEX'[STNC_PCT] = 1,
			    'NCLEX'[TestTypeDesc] = "NCLEX PN"
			)
			
			```
		formatString: 0
		lineageTag: 621a0dce-2f70-4d99-bb73-8996988de49f

		changedProperty = IsHidden

	measure 'NCLEX Pass Rates PN' = DIVIDE(NCLEX[FirstAttempt_PN],NCLEX[CountFirstAttempts_PN])
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: be732e17-6b53-453d-9bef-4ed2b0d9b304

		changedProperty = IsHidden

	measure FirstAttempt_RN =
			CALCULATE(SUM(NCLEX[first_attempt_pass]),NCLEX[STNC_PCT] = 1,
			NCLEX[TestTypeDesc] = "NCLEX RN")
		formatString: 0
		lineageTag: 9762f2da-8876-40c0-8595-f82a5ffaa4be

		changedProperty = IsHidden

	measure CountFirstAttempts_RN = ```
			
			CALCULATE(
			    COUNTROWS('NCLEX'),
			    'NCLEX'[STNC_PCT] = 1,
			    'NCLEX'[TestTypeDesc] = "NCLEX RN"
			)
			
			```
		formatString: 0
		lineageTag: a2a80c49-95af-466f-8045-4260b7ac3e0b

		changedProperty = IsHidden

	measure 'NCLEX Pass Rates RN' = DIVIDE(NCLEX[FirstAttempt_RN],NCLEX[CountFirstAttempts_RN])
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 0d5a62a5-4eaa-4fdd-8cff-a93a0f38dfed

		changedProperty = IsHidden

	measure TotalFirstAttemptPassRate =
			
			DIVIDE(
			    CALCULATE(SUM('NCLEX'[first_attempt_pass]), 'NCLEX'[STNC_PCT] = 1),
			    CALCULATE(COUNTROWS('NCLEX'), 'NCLEX'[STNC_PCT] = 1),
			    0
			)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 8b2810bb-ce3f-4295-b13e-f58c9fd29ce0

		changedProperty = IsHidden

	measure PreviousQuarter = ```
			
			VAR LatestStatusDate =
			    CALCULATE(
			        MAX(NCLEX[DateTaken]),
			        NOT ISBLANK(NCLEX[DateTaken])
			    )
			
			VAR PrevDate = EDATE(LatestStatusDate, -3)  -- Move back one quarter
			
			VAR QuarterNum =
			    SWITCH(
			        TRUE(),
			        MONTH(PrevDate) IN {1, 2, 3}, 1,
			        MONTH(PrevDate) IN {4, 5, 6}, 2,
			        MONTH(PrevDate) IN {7, 8, 9}, 3,
			        4
			    )
			
			RETURN
			    "Q" & QuarterNum & " " & YEAR(PrevDate)
			
			```
		lineageTag: 1858461a-45eb-4ff0-a1e0-c6db3cee84f2

		changedProperty = IsHidden

	measure 'NCLEX Pass Rate RN Last Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1, 
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4,  
			        CurrentQuarterKey - 1 
			    )
			
			RETURN
			DIVIDE(
			    CALCULATE([FirstAttempt_RN], FILTER(NCLEX, YEAR([DateTaken]) * 10 + [QUARTER_NUMBER] = LastQuarterKey)),
			    CALCULATE([CountFirstAttempts_RN], FILTER(NCLEX, YEAR([DateTaken]) * 10 + [QUARTER_NUMBER] = LastQuarterKey)),
			    0  
			)
			```
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: 59de7520-4f30-40f5-a51c-9235545e7727

		changedProperty = IsHidden

	measure 'NCLEX Pass Rate PN Last Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1,  // If current is Q1
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4,
			        CurrentQuarterKey - 1
			    )
			
			VAR FirstAttempts =
			    CALCULATE(
			        [FirstAttempt_PN],
			        FILTER(NCLEX, YEAR([DateTaken]) * 10 + [QUARTER_NUMBER] = LastQuarterKey)
			    )
			
			VAR CountAttempts =
			    CALCULATE(
			        [CountFirstAttempts_PN],
			        FILTER(NCLEX, YEAR([DateTaken]) * 10 + [QUARTER_NUMBER] = LastQuarterKey)
			    )
			
			RETURN
			IF(
			    ISBLANK(FirstAttempts) || ISBLANK(CountAttempts),
			    0,
			    DIVIDE(FirstAttempts, CountAttempts)
			)
			
			```
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: df33e344-879c-4918-b1c5-982ad0dc91d3

		changedProperty = IsHidden

	measure 'FirstAttempt_RN Last_Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1,  // Q1
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4,  // Q4 of previous year
			        CurrentQuarterKey - 1
			    )
			
			VAR Result =
			    CALCULATE(
			        SUM(NCLEX[first_attempt_pass]),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX RN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 9178f79f-c94b-47b4-9add-4445f395afc4

		changedProperty = IsHidden

	measure 'FirstAttempt_PN Last_Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1,  
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4,  
			        CurrentQuarterKey - 1
			    )
			
			VAR Result =
			    CALCULATE(
			        SUM(NCLEX[first_attempt_pass]),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX PN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: cb0938b4-304e-4ac5-b74e-aea6903a642b

		changedProperty = IsHidden

	measure 'CountFirstAttempts_RN Last Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1, 
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4, 
			        CurrentQuarterKey - 1
			    )
			
			VAR Result =
			    CALCULATE(
			        COUNTROWS(NCLEX),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX RN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 57960f34-f78b-4932-ba91-d686db3ba096

		changedProperty = IsHidden

	measure 'CountFirstAttempts_PN Last Quarter' = ```
			
			VAR CurrentQuarterKey =
			    MAXX(ALLSELECTED(NCLEX), YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER])
			
			VAR LastQuarterKey =
			    IF(
			        MOD(CurrentQuarterKey, 10) = 1, 
			        (DIVIDE(CurrentQuarterKey, 10, 0) - 1) * 10 + 4, 
			        CurrentQuarterKey - 1
			    )
			
			VAR Result =
			    CALCULATE(
			        COUNTROWS(NCLEX),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX PN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: de33c941-6f95-4b4e-b8ce-144e98db1778

		changedProperty = IsHidden

	measure 'FirstAttempt_RN Last Year Completed Quarter' = ```
			
			VAR CurrentYear = YEAR(TODAY())
			VAR CurrentMonth = MONTH(TODAY())
			
			VAR CurrentQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentMonth <= 3, 1,
			        CurrentMonth <= 6, 2,
			        CurrentMonth <= 9, 3,
			        4
			    )
			
			VAR LastYear =
			    CurrentYear - 1
			
			VAR LastQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentQuarter = 1, 4,   
			        CurrentQuarter = 2, 1,   
			        CurrentQuarter = 3, 2,  
			        3                        
			    )
			
			VAR LastQuarterKey =
			    LastYear * 10 + LastQuarter
			
			VAR Result =
			    CALCULATE(
			        SUM(NCLEX[first_attempt_pass]),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX RN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 90a1cebb-0190-4940-85a8-bb0504fcc7b3

		changedProperty = IsHidden

	measure 'FirstAttempt_PN Last Year Completed Quarter' = ```
			
			VAR CurrentYear = YEAR(TODAY())
			VAR CurrentMonth = MONTH(TODAY())
			
			VAR CurrentQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentMonth <= 3, 1,
			        CurrentMonth <= 6, 2,
			        CurrentMonth <= 9, 3,
			        4
			    )
			
			VAR LastYear =
			    CurrentYear - 1
			
			VAR LastQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentQuarter = 1, 4,   
			        CurrentQuarter = 2, 1,   
			        CurrentQuarter = 3, 2,  
			        3                        
			    )
			
			VAR LastQuarterKey =
			    LastYear * 10 + LastQuarter
			
			VAR Result =
			    CALCULATE(
			        SUM(NCLEX[first_attempt_pass]),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX PN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 395468f7-f9b4-442c-8f99-c9f26589e01f

		changedProperty = IsHidden

	measure 'CountFirstAttempts_RN Last Year Completed Quarter' = ```
			
			VAR CurrentYear = YEAR(TODAY())
			VAR CurrentMonth = MONTH(TODAY())
			
			VAR CurrentQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentMonth <= 3, 1,
			        CurrentMonth <= 6, 2,
			        CurrentMonth <= 9, 3,
			        4
			    )
			
			VAR LastYear =
			    CurrentYear - 1
			
			VAR LastQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentQuarter = 1, 4,  
			        CurrentQuarter = 2, 1,   
			        CurrentQuarter = 3, 2,   
			        3                        
			    )
			
			VAR LastQuarterKey =
			    LastYear * 10 + LastQuarter
			
			VAR Result =
			    CALCULATE(
			        COUNTROWS(NCLEX),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX RN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: 9aca991a-f28f-491f-a201-8623c0f0da07

		changedProperty = IsHidden

	measure 'CountFirstAttempts_PN Last Year Completed Quarter' = ```
			
			VAR CurrentYear = YEAR(TODAY())
			VAR CurrentMonth = MONTH(TODAY())
			
			VAR CurrentQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentMonth <= 3, 1,
			        CurrentMonth <= 6, 2,
			        CurrentMonth <= 9, 3,
			        4
			    )
			
			VAR LastYear =
			    CurrentYear - 1
			
			VAR LastQuarter =
			    SWITCH(
			        TRUE(),
			        CurrentQuarter = 1, 4,   // Q1 this year -> Q4 last year
			        CurrentQuarter = 2, 1,   // Q2 this year -> Q1 last year
			        CurrentQuarter = 3, 2,   // Q3 this year -> Q2 last year
			        3                        // Q4 this year -> Q3 last year
			    )
			
			VAR LastQuarterKey =
			    LastYear * 10 + LastQuarter
			
			VAR Result =
			    CALCULATE(
			        COUNTROWS(NCLEX),
			        FILTER(
			            NCLEX,
			            YEAR(NCLEX[DateTaken]) * 10 + NCLEX[QUARTER_NUMBER] = LastQuarterKey &&
			            NCLEX[STNC_PCT] = 1 &&
			            NCLEX[TestTypeDesc] = "NCLEX PN"
			        )
			    )
			
			RETURN IF(ISBLANK(Result), 0, Result)
			
			```
		formatString: 0
		lineageTag: b9f0a014-10cb-473d-8fcf-697ff8aa0f9a

		changedProperty = IsHidden

	measure 'NCLEX Pass Rate RN Last Year Completed Quarter' = ```
			
			DIVIDE(
			    [FirstAttempt_RN Last Year Completed Quarter],
			    [CountFirstAttempts_RN Last Year Completed Quarter]
			)
			
			```
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: b55257f2-f1ee-42de-ab99-2bbc01d8ac8d

		changedProperty = IsHidden

	measure 'NCLEX Pass Rate PN Last Year Completed Quarter' = ```
			
			DIVIDE(
			    [FirstAttempt_PN Last Year Completed Quarter],
			    [CountFirstAttempts_PN Last Year Completed Quarter]
			)
			
			```
		formatString: 0.0%;-0.0%;0.0%
		lineageTag: c34d2f97-73ac-4cf7-b0bb-e7f87448a51e

		changedProperty = IsHidden

	measure PNColor1 =
			
			IF([NCLEX Pass Rate PN Last Qtr] < [NCLEX Pass Rate PN Last Year],"#C00000", "#000000")
		lineageTag: b5d100c8-d243-4916-beb4-5755cec59233

	measure RNColor1 = ```
			
			IF([NCLEX Pass Rate RN Last Qtr] < [NCLEX Pass Rate RN Last Year],"#C00000", "#000000")
			
			```
		lineageTag: 761f9108-b7b7-4cd0-972e-5fee2bdf2368

	column ID
		dataType: string
		lineageTag: 27103e29-bc18-4235-a816-806d11b4fbc6
		summarizeBy: none
		sourceColumn: ID

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column LastName
		dataType: string
		lineageTag: aed9a4df-343c-4397-b6d7-4542775b5919
		summarizeBy: none
		sourceColumn: LastName

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column FirstName
		dataType: string
		lineageTag: d49df5b4-c7ab-43f3-90a8-ae128b0b46bf
		summarizeBy: none
		sourceColumn: FirstName

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Attended_GALEN
		dataType: string
		lineageTag: b8e0bbc7-498e-4b2b-9dd9-641dcc46e438
		summarizeBy: none
		sourceColumn: Attended_GALEN

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column ProgramLocation
		dataType: string
		lineageTag: 962fd571-e442-4b3d-b423-fac045fae683
		summarizeBy: none
		sourceColumn: ProgramLocation

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Program
		dataType: string
		lineageTag: b2f7e8cc-48b9-405f-a9dc-208a14773a54
		summarizeBy: none
		sourceColumn: Program

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column ProgramStartDate
		dataType: dateTime
		formatString: General Date
		lineageTag: 7d41f7a4-c8fe-4fed-9c54-b863979f94f6
		summarizeBy: none
		sourceColumn: ProgramStartDate

		variation Variation
			isDefault
			relationship: ac70030e-1df7-4a8e-9c04-1e0d809c86f0
			defaultHierarchy: LocalDateTable_f8c961f1-d8fd-4f19-ba98-f93d47d3149c.'Date Hierarchy'

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Status
		dataType: string
		lineageTag: 8f01c66d-93ca-4f42-a4fd-4897e2fdd3b8
		summarizeBy: none
		sourceColumn: Status

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column DateTaken
		dataType: dateTime
		formatString: General Date
		lineageTag: 1df27b58-7683-4883-87a1-185e82eeeb16
		summarizeBy: none
		sourceColumn: DateTaken

		variation Variation
			isDefault
			relationship: 55a7a80a-8fa1-427b-99b8-9fd54d8bfc89
			defaultHierarchy: LocalDateTable_defaa462-83c8-426b-a57d-070cfdc37a80.'Date Hierarchy'

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column StatusDate
		dataType: dateTime
		formatString: General Date
		lineageTag: cd1f7427-3c2d-4451-9869-42bb6cda59d2
		summarizeBy: none
		sourceColumn: StatusDate

		variation Variation
			isDefault
			relationship: 2ba47eb3-3b44-43ec-a8ca-c45c1c639590
			defaultHierarchy: LocalDateTable_01729417-1fd4-4f39-a0fe-9ed71a6c4b5b.'Date Hierarchy'

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column 'Degree Date'
		dataType: dateTime
		formatString: General Date
		lineageTag: bf6c84df-bac2-4cec-901a-770aa186a2de
		summarizeBy: none
		sourceColumn: Degree Date

		variation Variation
			isDefault
			relationship: 8859969e-9fe3-4e7b-ba85-132d4656d666
			defaultHierarchy: LocalDateTable_c694447e-bc10-4982-92d6-a5a68e9fb3f9.'Date Hierarchy'

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Type
		dataType: string
		lineageTag: b5c9be0b-c9d9-4a3b-a3e2-2dfdc1bd65e4
		summarizeBy: none
		sourceColumn: Type

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column TestType
		dataType: string
		lineageTag: 283c890b-89ac-4b4a-9e51-751cdb06b9f6
		summarizeBy: none
		sourceColumn: TestType

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column TestTypeDesc
		dataType: string
		lineageTag: 75d78aee-eb68-40d3-9948-2464a7a9ed99
		summarizeBy: none
		sourceColumn: TestTypeDesc

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column OtherType
		dataType: string
		lineageTag: cb157b07-a6ad-43f1-a543-ddcb68b6d02f
		summarizeBy: none
		sourceColumn: OtherType

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column STNC_PCT
		dataType: double
		lineageTag: d2b7c65c-d117-4c6f-a943-1e5ae1bc7049
		summarizeBy: sum
		sourceColumn: STNC_PCT

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column SpecialFactors
		dataType: string
		lineageTag: 8526c265-e38e-4622-9c04-3d5f74c2f79c
		summarizeBy: none
		sourceColumn: SpecialFactors

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Score
		dataType: double
		lineageTag: 0db20b7b-9c99-46c2-af7d-c197a1d14943
		summarizeBy: sum
		sourceColumn: Score

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column passing
		dataType: int64
		formatString: 0
		lineageTag: d0905a5b-109d-4bb0-b244-6870420ad1b0
		summarizeBy: sum
		sourceColumn: passing

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column first_attempt_pass
		dataType: int64
		formatString: 0
		lineageTag: b8603862-0566-4877-b00f-607e0d970d2c
		summarizeBy: sum
		sourceColumn: first_attempt_pass

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column LOCATION_REGIONS_ID
		dataType: string
		lineageTag: 854e1d2a-7acc-4293-8415-2741e0e4223e
		summarizeBy: none
		sourceColumn: LOCATION_REGIONS_ID

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column QUARTER_NUMBER = ```
			
			SWITCH(
			    TRUE(),
			    MONTH([DateTaken]) >= 1 && MONTH([DateTaken]) <= 3, 1,
			    MONTH([DateTaken]) >= 4 && MONTH([DateTaken]) <= 6, 2,
			    MONTH([DateTaken]) >= 7 && MONTH([CurrentDateFormatted]) <= 9, 3,
			    4
			)
			
			```
		formatString: 0
		lineageTag: 0462991d-ad99-44b6-af00-4e2f89043b66
		summarizeBy: sum

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column Quarter_Display = ```
			
			"Q" & 
			SWITCH(
			    TRUE(),
			    MONTH(NCLEX[DateTaken]) IN {1, 2, 3}, "1",
			    MONTH(NCLEX[DateTaken]) IN {4, 5, 6}, "2",
			    MONTH(NCLEX[DateTaken]) IN {7, 8, 9}, "3",
			    "4"
			) 
			& " " & YEAR(NCLEX[DateTaken])
			
			```
		lineageTag: 8ec03528-1c29-49ea-bd05-5fd28995f076
		summarizeBy: none

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	column ProgramEndDate
		dataType: dateTime
		formatString: General Date
		lineageTag: db7f63e9-9491-4246-88a4-9696a256b8f3
		summarizeBy: none
		sourceColumn: ProgramEndDate

		variation Variation
			isDefault
			relationship: 57744321-59d2-43ab-917f-f2e79815d488
			defaultHierarchy: LocalDateTable_20114ded-5f07-49ae-9949-1f5e7c86cf37.'Date Hierarchy'

		changedProperty = IsHidden

		annotation SummarizationSetBy = Automatic

	partition NCLEX = m
		mode: import
		source =
				let
				    Source = Sql.Database("rpt2-prod.ec.galencollege.edu", "coll18_repl_production", [Query="DROP TABLE IF EXISTS #FINAL;#(lf)#(lf)WITH#(lf)TESTZ AS (#(lf)#(lf)SELECT#(lf)STUDENT_NON_COURSES.STNC_PERSON_ID,#(lf)STUDENT_NON_COURSES.[STUDENT_NON_COURSES_ID],#(lf)'VNPN' AS MASTERPGM,#(lf)CAST(STUDENT_NON_COURSES.STNC_START_DATE AS DATE)  AS STNC_START_DATE,#(lf)CAST(STUDENT_NON_COURSES.STNC_STATUS_DATE AS DATE) AS STNC_STATUS_DATE,#(lf)isnull(STUDENT_NON_COURSES.STNC_TEST_TYPE, 'blank') as STNC_TEST_TYPE ,#(lf)STUDENT_NON_COURSES.STNC_NON_COURSE,#(lf)STUDENT_NON_COURSES.STNC_TITLE,#(lf)isnull(STUDENT_NON_COURSES.STNC_TEST_OTHER_TYPE, 'blank') as STNC_TEST_OTHER_TYPE ,#(lf)STUDENT_NON_COURSES.STNC_PCT,#(lf)STUDENT_NON_COURSES_LS.STNC_SPECIAL_FACTORS ,#(lf)STUDENT_NON_COURSES.STNC_SCORE,#(lf)CASE WHEN STNC_SCORE = '100'           THEN 1#(lf)     WHEN STNC_SCORE = '0'             THEN 0#(lf)     ELSE NULL END AS passing_grade,#(lf)#(lf)     (#(lf)CASE WHEN STNC_PCT = 1#(lf)THEN 1#(lf)     ELSE NULL END *  #(lf)#(lf)CASE WHEN STNC_SCORE = '100'           THEN 1#(lf)     WHEN STNC_SCORE = '0'             THEN 0#(lf)     ELSE NULL END#(lf)) AS first_attempt_pass#(lf)#(lf)FROM  STUDENT_NON_COURSES WITH (NOLOCK)#(lf)LEFT JOIN STUDENT_NON_COURSES_LS WITH (NOLOCK)#(lf)      on STUDENT_NON_COURSES_LS.STUDENT_NON_COURSES_ID            = STUDENT_NON_COURSES.STUDENT_NON_COURSES_ID#(lf)                                            and STUDENT_NON_COURSES_LS .POS = 1  #(lf)WHERE 1=1#(lf)AND STUDENT_NON_COURSES.STNC_NON_COURSE in ('NCLEXPN')#(lf)AND STNC_START_DATE > DATEADD(YEAR, -3, GETDATE())#(lf)#(lf)UNION#(lf)#(lf)SELECT#(lf)STUDENT_NON_COURSES.STNC_PERSON_ID,#(lf)STUDENT_NON_COURSES.[STUDENT_NON_COURSES_ID],#(lf)'ADN' AS MASTERPGM,#(lf)CAST(STUDENT_NON_COURSES.STNC_START_DATE AS DATE)  AS STNC_START_DATE,#(lf)CAST(STUDENT_NON_COURSES.STNC_STATUS_DATE AS DATE) AS STNC_STATUS_DATE,#(lf)isnull(STUDENT_NON_COURSES.STNC_TEST_TYPE, 'blank') as STNC_TEST_TYPE ,#(lf)STUDENT_NON_COURSES.STNC_NON_COURSE,#(lf)STUDENT_NON_COURSES.STNC_TITLE,#(lf)isnull(STUDENT_NON_COURSES.STNC_TEST_OTHER_TYPE, 'blank') as STNC_TEST_OTHER_TYPE ,#(lf)STUDENT_NON_COURSES.STNC_PCT,#(lf)STUDENT_NON_COURSES_LS.STNC_SPECIAL_FACTORS ,#(lf)STUDENT_NON_COURSES.STNC_SCORE,#(lf)CASE WHEN STNC_SCORE = '100'           THEN 1#(lf)     WHEN STNC_SCORE = '0'             THEN 0#(lf)     ELSE NULL END AS passing_grade,#(lf)#(lf)         (#(lf)CASE WHEN STNC_PCT = 1#(lf)THEN 1#(lf)     ELSE NULL END *  #(lf)#(lf)CASE WHEN STNC_SCORE = '100'           THEN 1#(lf)     WHEN STNC_SCORE = '0'             THEN 0#(lf)     ELSE NULL END#(lf)) AS first_attempt_pass#(lf)FROM  STUDENT_NON_COURSES        WITH (NOLOCK)#(lf)LEFT JOIN STUDENT_NON_COURSES_LS WITH (NOLOCK)#(lf)       on STUDENT_NON_COURSES_LS.STUDENT_NON_COURSES_ID            = STUDENT_NON_COURSES.STUDENT_NON_COURSES_ID#(lf)                                            and STUDENT_NON_COURSES_LS .POS = 1  #(lf)WHERE 1=1#(lf)AND STUDENT_NON_COURSES.STNC_NON_COURSE in ('NCLEXRN')#(lf)AND STNC_START_DATE > DATEADD(YEAR, -3, GETDATE())#(lf)#(lf)),#(lf)#(lf)MP AS (#(lf)SELECT DISTINCT ACAD_PROGRAMS_ID AS PROGRAM ,#(lf)       CASE WHEN LEFT (ACAD_PROGRAMS_ID, 2 ) IN ('VN', 'PN') THEN 'VNPN'#(lf)       WHEN LEFT (ACAD_PROGRAMS_ID, 3 ) IN ('ADN')      THEN 'ADN'#(lf)WHEN SUBSTRING( ACAD_PROGRAMS_ID, 5,3 ) IN ('PRE') THEN 'ADN'#(lf)ELSE NULL END AS MASTER_PROGRAM#(lf)FROM ACAD_PROGRAMS#(lf)JOIN STUDENT_PROGRAMS SP ON SUBSTRING(SP.STUDENT_PROGRAMS_ID, 9,32) = ACAD_PROGRAMS.ACAD_PROGRAMS_ID#(lf)WHERE ACPG_TITLE != 'DO NOT USE'#(lf)AND (LEFT (ACAD_PROGRAMS_ID, 2 ) IN ('VN', 'PN')#(lf)    OR#(lf)LEFT (ACAD_PROGRAMS_ID, 3 ) IN ('ADN')#(lf)OR#(lf)SUBSTRING( ACAD_PROGRAMS_ID, 5,3 ) IN ('PRE')#(lf))#(lf)#(lf))#(lf)#(lf),GRADZ AS (#(lf)SELECT  #(lf)SS.STUDENT_PROGRAMS_ID,#(lf)LEFT(SS.STUDENT_PROGRAMS_ID, 7)        AS STUDENT_ID,#(lf)SUBSTRING(SS.STUDENT_PROGRAMS_ID,9,32) AS PROGRAM_ID,#(lf)MP.MASTER_PROGRAM,#(lf)SS.STPR_STATUS, SD.STPR_START_DATE, SD.STPR_END_DATE, SS.STPR_STATUS_DATE, SP.STPR_LOCATION,#(lf)COALESCE(GD.GRADUATE_DEGREE_DATE, SD.STPR_END_DATE) AS DEGREE_DATE#(lf)--ROW_NUMBER() OVER (PARTITION BY LEFT(SS.STUDENT_PROGRAMS_ID, 7) ORDER BY SD.STPR_END_DATE DESC) as CURRENT_IND#(lf)FROM STUDENT_PROGRAMS SP#(lf)JOIN STPR_STATUSES SS    ON SP.STUDENT_PROGRAMS_ID = SS.STUDENT_PROGRAMS_ID AND SS.STPR_STATUS = 'G' AND SS.POS = 1#(lf)JOIN STPR_DATES SD       ON SP.STUDENT_PROGRAMS_ID = SD.STUDENT_PROGRAMS_ID AND SD.POS = 1#(lf)JOIN MP                  ON MP.PROGRAM = SUBSTRING(SP.STUDENT_PROGRAMS_ID,9,32)#(lf)#(lf)LEFT JOIN (#(lf)      SELECT CONCAT(ACAD_PERSON_ID, '*', ACAD_ACAD_PROGRAM) AS SPID , MAX(ACAD_DEGREE_DATE) AS GRADUATE_DEGREE_DATE#(lf)      FROM ACAD_CREDENTIALS#(lf) GROUP BY ACAD_PERSON_ID, ACAD_ACAD_PROGRAM#(lf) HAVING MAX(ACAD_DEGREE_DATE) IS NOT NULL AND ACAD_ACAD_PROGRAM IS NOT NULL#(lf)) GD ON GD.SPID = SP.STUDENT_PROGRAMS_ID#(lf)#(lf))#(lf)#(lf)#(lf)SELECT DISTINCT#(lf)TESTZ.STNC_PERSON_ID AS ID,#(lf)PERSON.LAST_NAME AS LastName,#(lf)PERSON.FIRST_NAME    AS FirstName,#(lf)CASE WHEN PERSON.FIRST_NAME IS NULL#(lf)     THEN 'N' ELSE 'Y' END  AS [Attended_GALEN],#(lf)STPR_LOCATION AS [ProgramLocation],#(lf)--LOCATION_REGIONS_ID,#(lf)PROGRAM_ID AS [Program],#(lf)STPR_START_DATE AS [ProgramStartDate],#(lf)STPR_END_DATE AS [ProgramEndDate],#(lf)STPR_STATUS AS [Status],#(lf)STNC_START_DATE AS [DateTaken],#(lf)STNC_STATUS_DATE AS [StatusDate],#(lf)GRADZ.DEGREE_DATE           AS [Degree Date],#(lf)CASE WHEN STNC_TEST_TYPE = 'blank'#(lf)     THEN null#(lf)ELSE STNC_TEST_TYPE#(lf)END AS Type,#(lf)STNC_NON_COURSE AS TestType,#(lf)STNC_TITLE AS TestTypeDesc,#(lf)CASE WHEN STNC_TEST_OTHER_TYPE = 'blank' then null else STNC_TEST_TYPE end AS OtherType,#(lf)STNC_PCT AS STNC_PCT,#(lf)STNC_SPECIAL_FACTORS AS SpecialFactors,#(lf)STNC_SCORE AS Score,#(lf)passing_grade AS passing,#(lf)first_attempt_pass AS first_attempt_pass#(lf)INTO #FINAL#(lf)FROM TESTZ#(lf)LEFT JOIN PERSON ON PERSON.ID = TESTZ.STNC_PERSON_ID#(lf)LEFT JOIN GRADZ ON TESTZ.STNC_PERSON_ID = GRADZ.STUDENT_ID AND TESTZ.MASTERPGM = GRADZ.MASTER_PROGRAM AND STPR_END_DATE < TESTZ.STNC_START_DATE --AND CURRENT_IND = 1#(lf)#(lf)SELECT F.*,LOCR_DESC LOCATION_REGIONS_ID#(lf)FROM #FINAL F#(lf)INNER JOIN LOCATIONS L ON L.LOCATIONS_ID=F.[ProgramLocation]#(lf)INNER JOIN LOCATION_REGIONS RL ON L.LOC_REGION = RL.LOCATION_REGIONS_ID#(lf)WHERE 1=1#(lf)#(lf)#(lf)/*#(lf)#(lf)need to associate tests with appropriate programs to get the campus.#(lf)#(lf)tests = NCLEX exams.#(lf)#(lf)NCLEX exams are in two categories, RN and PN.#(lf)#(lf)For now, only looking at 1st attempt.#(lf)#(lf)Need to map PN tests to clock hour programs. clock hour programs start with VN or PN.#(lf)#(lf)Need to map RN tests to non-clock hour programs. (Everything not starting VN or PN).#(lf)#(lf)Finally, need to map each NCLEX to it's corresponding program by student ID, RN/PN type, AND graduation date.#(lf)Need to return the latest graduation record, by STPR_END_DATE, that is BEFORE the NCLEX test date.#(lf)#(lf)*/#(lf)"])
				in
				    Source

	changedProperty = IsHidden

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

