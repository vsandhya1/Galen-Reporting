table 'Faculty Load'
	lineageTag: 2fcc2179-8871-4b81-a76e-6ba5738e9237

	column Colleague_ID
		dataType: string
		lineageTag: 3890a9ea-cf0b-4555-a2b7-820879e8bd73
		summarizeBy: none
		sourceColumn: Colleague_ID

		annotation SummarizationSetBy = Automatic

	column LAST_NAME
		dataType: string
		lineageTag: 584deb03-ef9c-4bbe-84cd-4548895e82ec
		summarizeBy: none
		sourceColumn: LAST_NAME

		annotation SummarizationSetBy = Automatic

	column FIRST_NAME
		dataType: string
		lineageTag: 1d5483b3-f3bd-4036-a997-d6aa7af2e148
		summarizeBy: none
		sourceColumn: FIRST_NAME

		annotation SummarizationSetBy = Automatic

	column SEC_TERM
		dataType: string
		lineageTag: 573563a8-4491-4028-b010-69f4ad620f48
		summarizeBy: none
		sourceColumn: SEC_TERM

		annotation SummarizationSetBy = Automatic

	column SEC_START_DATE
		dataType: dateTime
		formatString: General Date
		lineageTag: 8e350c8c-2af2-4cde-a1b3-124ffefed961
		summarizeBy: none
		sourceColumn: SEC_START_DATE

		annotation SummarizationSetBy = Automatic

	column Hours_Per_Week
		dataType: double
		lineageTag: c85db6b2-95cb-475f-b74d-db73d9c7c274
		summarizeBy: sum
		sourceColumn: Hours_Per_Week

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column EMP_STATUS
		dataType: string
		lineageTag: ae7a1c9c-ca33-4a7a-bb34-5c09b1e14342
		summarizeBy: none
		sourceColumn: EMP_STATUS

		annotation SummarizationSetBy = Automatic

	column Under_Load_Indicator
		dataType: int64
		formatString: 0
		lineageTag: 784ac586-d031-4118-baa6-dac7216f123f
		summarizeBy: sum
		sourceColumn: Under_Load_Indicator

		annotation SummarizationSetBy = Automatic

	column Hours_Flag = ```
			
			 IF('Faculty Load'[Hours_Per_Week]<28, "# of Faculty Underload", IF('Faculty Load'[Hours_Per_Week] >=28 && 'Faculty Load'[Hours_Per_Week]<=32, "# of Faculty Meeting Load", IF('Faculty Load'[Hours_Per_Week]>32, "# of Faculty Overload", BLANK())))
			
			```
		lineageTag: 139cc3f2-af06-4047-9a7d-db6a4db54990
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column Course
		dataType: string
		lineageTag: 3e21f5da-b081-4a52-a9aa-5ffd32aa2744
		summarizeBy: none
		sourceColumn: Course

		annotation SummarizationSetBy = Automatic

	column Load = ```
			
			IF(
			    'Faculty Load'[Hours_Per_Week] < 28, 
			    "Underload", 
			    IF(
			        'Faculty Load'[Hours_Per_Week] >= 28 && 'Faculty Load'[Hours_Per_Week] <= 32, 
			        "At load", 
			        IF(
			            'Faculty Load'[Hours_Per_Week] > 32, 
			            "Overload", 
			            BLANK()
			        )
			    )
			)
			
			```
		lineageTag: f44d41fd-d8f3-4f60-b9ed-e82f68778fd6
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column WKLD_HOURS
		dataType: double
		lineageTag: 139b2236-b2f7-4288-8f5b-ae379cee392e
		summarizeBy: sum
		sourceColumn: WKLD_HOURS

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column SERVICE_HOURS
		dataType: double
		lineageTag: d52187b4-3d05-4a9e-95e5-ebb83309154f
		summarizeBy: sum
		sourceColumn: SERVICE_HOURS

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CONTACT_AND_PREP_HOURS
		dataType: double
		lineageTag: b3f8ad55-c92d-476a-8abc-7c1455cd47d5
		summarizeBy: sum
		sourceColumn: CONTACT_AND_PREP_HOURS

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column CONTACT_HOURS
		dataType: double
		lineageTag: 85480506-ee2f-417a-afd1-5a334c3b8ba3
		summarizeBy: sum
		sourceColumn: CONTACT_HOURS

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column PREP_HOURS
		dataType: double
		lineageTag: 9883eb1e-0f6b-4e4a-a80d-70d03c6c3bec
		summarizeBy: sum
		sourceColumn: PREP_HOURS

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'Faculty Load' = m
		mode: import
		source =
				let
				    Source = Sql.Database("rpt2-prod.ec.galencollege.edu", "coll18_repl_production", [Query="WITH LAWSON AS (#(lf)    SELECT DISTINCT ID, MAX(PERSON_ALT_IDS) AS Lawson_id#(lf)    FROM PERSON_ALT#(lf)    WHERE PERSON_ALT_ID_TYPES = 'LAWA'#(lf)    GROUP BY ID#(lf)),#(lf)EL_GROUP AS (#(lf)    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)    FROM PERSON  #(lf)    LEFT JOIN PERSON_LS #(lf)      ON PERSON.ID = PERSON_LS.ID#(lf)    WHERE PERSON_LS.GROUPS LIKE 'El=%'#(lf)),#(lf)/* ===== UPDATED ST_GROUP CTE: only look for STAT= explicitly ===== */#(lf)ST_GROUP AS (#(lf)    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)    FROM PERSON  #(lf)    LEFT JOIN PERSON_LS ON PERSON.ID = PERSON_LS.ID#(lf)    WHERE PERSON_LS.GROUPS LIKE '%Stat=%'#(lf)),#(lf)JD_GROUP AS (#(lf)    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)    FROM PERSON  #(lf)    LEFT JOIN PERSON_LS #(lf)      ON PERSON.ID = PERSON_LS.ID#(lf)    WHERE PERSON_LS.GROUPS LIKE 'Jd=%'#(lf)),#(lf)MAX_SEC_CONTACT AS (#(lf)    SELECT COURSE_SECTIONS_ID, MAX(SEC_CONTACT_HOURS) AS SEC_CONTACT_HOURS#(lf)    FROM SEC_CONTACT#(lf)    GROUP BY COURSE_SECTIONS_ID#(lf)),#(lf)ACTIVE_STUDENTS AS (#(lf)    SELECT #(lf)        COURSE_SECTIONS.COURSE_SECTIONS_ID, #(lf)        COUNT(STUDENT_COURSE_SEC.SCS_STUDENT) AS ACTIVE_STUDENT_COUNT#(lf)    FROM COURSE_SECTIONS#(lf)    INNER JOIN SEC_STATUSES#(lf)        ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_STATUSES.COURSE_SECTIONS_ID#(lf)       AND SEC_STATUSES.POS = 1#(lf)    INNER JOIN STUDENT_COURSE_SEC  #(lf)        ON STUDENT_COURSE_SEC.SCS_COURSE_SECTION = COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)    INNER JOIN STC_STATUSES#(lf)        ON STC_STATUSES.STUDENT_ACAD_CRED_ID = STUDENT_COURSE_SEC.SCS_STUDENT_ACAD_CRED#(lf)       AND STC_STATUSES.POS = 1#(lf)    WHERE STC_STATUSES.STC_STATUS IN ('N', 'A')#(lf)      AND SEC_STATUSES.SEC_STATUS = 'A'#(lf)    GROUP BY COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)),#(lf)TERM_SET AS (#(lf)    SELECT TOP 6 TERMS_ID#(lf)    FROM TERMS#(lf)    WHERE RIGHT(TERMS_ID, 1) = 'Q'#(lf)      AND TERM_START_DATE < GETDATE()#(lf)      AND TERM_START_DATE >= DATEADD(MONTH, -21, GETDATE())#(lf)    ORDER BY TERM_START_DATE DESC#(lf)),#(lf)MAIN AS (#(lf)    SELECT#(lf)        ISNULL(COURSE_SECTIONS.SEC_LOCATION, 'ONL') AS SEC_LOC,#(lf)        l.LOC_DESC AS SectionLocation,#(lf)        LR.LOCATION_REGIONS_ID,#(lf)        LR.LOCR_DESC,#(lf)        COALESCE(PERSON.LAST_NAME, 'n/a')   AS LAST_NAME,#(lf)        COALESCE(PERSON.FIRST_NAME, 'n/a')  AS FIRST_NAME,#(lf)        COURSE_SEC_FACULTY.CSF_FACULTY       AS Colleague_ID,#(lf)        LAWSON.Lawson_id,#(lf)        COURSE_SEC_FACULTY.CSF_FACULTY_LOAD,#(lf)        COURSE_SECTIONS.SEC_NAME,#(lf)        COURSE_SECTIONS.SEC_SHORT_TITLE,#(lf)        SEC_CONTACT.SEC_CONTACT_HOURS,#(lf)        COURSE_SECTIONS.SEC_NO_WEEKS,#(lf)        COURSE_SECTIONS.SEC_START_DATE,#(lf)        COURSE_SECTIONS.SEC_END_DATE,#(lf)        COURSE_SECTIONS.SEC_SUBJECT,#(lf)#(lf)        SEC_CONTACT.SEC_CONTACT_HOURS * (COURSE_SEC_FACULTY.CSF_FACULTY_LOAD * 0.01) AS Hours_Teaching,#(lf)        SEC_CONTACT.SEC_CONTACT_HOURS * (COURSE_SEC_FACULTY.CSF_FACULTY_LOAD * 0.01)#(lf)          * CASE#(lf)              WHEN SEC_SUBJECT IN ('WKLD', 'SERVICE') THEN 0.0#(lf)              WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) IN ('L','C') THEN 0.25#(lf)              ELSE 1.0#(lf)            END AS Hours_Prep_Time,#(lf)        CASE#(lf)            WHEN COURSE_SEC_FACULTY.CSF_INSTR_METHOD = 'WRK' THEN 'Workload - No Prep'#(lf)            WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) = 'L'   THEN 'Lab'#(lf)            WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) = 'C'   THEN 'Clinical'#(lf)            ELSE 'Theory'#(lf)        END AS CourseType,#(lf)        CASE#(lf)            WHEN DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE) = 7  THEN 8#(lf)            WHEN DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE) = 11 THEN 12#(lf)            ELSE DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE)#(lf)        END AS Weeks,#(lf)        COURSE_SECTIONS.SEC_TERM,#(lf)        PERSON.OCCUPATION,#(lf)        REPLACE(EL_GROUP.GROUPS, 'El=', '') AS EMP_LOCATION,#(lf)        REPLACE(ST_GROUP.GROUPS, 'Stat=', '') AS EMP_STATUS,#(lf)        REPLACE(JD_GROUP.GROUPS, 'Jd=', '') AS EMP_JOB_DESCRIPTION,#(lf)        ACTIVE_STUDENTS.ACTIVE_STUDENT_COUNT AS SEC_ACTIVE_STUDENT_COUNT,#(lf)        COURSE_SEC_FACULTY.CSF_TEACHING_ARRANGEMENT,#(lf)        VALS.VAL_EXTERNAL_REPRESENTATION,#(lf)        ACTIVE_STUDENTS.ACTIVE_STUDENT_COUNT,#(lf)        COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)    FROM COURSE_SECTIONS#(lf)    INNER JOIN TERM_SET #(lf)      ON COURSE_SECTIONS.SEC_TERM = TERM_SET.TERMS_ID#(lf)    INNER JOIN SEC_STATUSES#(lf)        ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_STATUSES.COURSE_SECTIONS_ID#(lf)       AND SEC_STATUSES.POS = 1#(lf)       AND SEC_STATUSES.SEC_STATUS = 'A'#(lf)    LEFT JOIN COURSE_SEC_FACULTY#(lf)      ON COURSE_SECTIONS.COURSE_SECTIONS_ID = COURSE_SEC_FACULTY.CSF_COURSE_SECTION#(lf)    LEFT JOIN ACTIVE_STUDENTS #(lf)      ON ACTIVE_STUDENTS.COURSE_SECTIONS_ID = COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)    LEFT JOIN MAX_SEC_CONTACT SEC_CONTACT #(lf)      ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_CONTACT.COURSE_SECTIONS_ID#(lf)    LEFT JOIN PERSON #(lf)      ON COURSE_SEC_FACULTY.CSF_FACULTY = PERSON.ID#(lf)    LEFT JOIN LAWSON #(lf)      ON COURSE_SEC_FACULTY.CSF_FACULTY = LAWSON.ID#(lf)    LEFT JOIN EL_GROUP #(lf)      ON PERSON.ID = EL_GROUP.ID#(lf)    LEFT JOIN ST_GROUP #(lf)      ON PERSON.ID = ST_GROUP.ID#(lf)    LEFT JOIN JD_GROUP #(lf)      ON PERSON.ID = JD_GROUP.ID#(lf)    LEFT JOIN VALS #(lf)      ON COURSE_SEC_FACULTY.CSF_TEACHING_ARRANGEMENT = VALS.VAL_MINIMUM_INPUT_STRING#(lf)     AND VALS.VALCODE_ID = 'TEACHING.ARRANGEMENTS'#(lf)    JOIN LOCATIONS l #(lf)      ON l.LOCATIONS_ID = ISNULL(COURSE_SECTIONS.SEC_LOCATION, 'ONL')#(lf)    JOIN LOCATION_REGIONS LR #(lf)      ON LR.LOCATION_REGIONS_ID = l.LOC_REGION#(lf)    WHERE COURSE_SEC_FACULTY.CSF_FACULTY <> 1050541#(lf)),#(lf)FINAL AS (#(lf)    SELECT  #(lf)        Colleague_ID, LAST_NAME, FIRST_NAME,#(lf)        STRING_AGG(SEC_NAME, ', ') AS Course,#(lf)        SEC_TERM, SEC_START_DATE,#(lf)        SUM((Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0)) AS Hours_Per_Week,#(lf)        SUM(CASE WHEN SEC_SUBJECT = 'WKLD' THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS WKLD_HOURS,#(lf)        SUM(CASE WHEN SEC_SUBJECT = 'SRVC' THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS SERVICE_HOURS,#(lf)        SUM(CASE WHEN SEC_SUBJECT NOT IN ('SRVC') THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS CONTACT_AND_PREP_HOURS,#(lf)        SUM(CASE WHEN SEC_SUBJECT NOT IN ('WKLD', 'SRVC') THEN Hours_Teaching / NULLIF(Weeks, 0) END) AS CONTACT_HOURS,#(lf)        SUM(CASE WHEN SEC_SUBJECT NOT IN ('WKLD', 'SRVC') THEN Hours_Prep_Time / NULLIF(Weeks, 0) END) AS PREP_HOURS,#(lf)        EMP_STATUS#(lf)    FROM MAIN#(lf)    GROUP BY #(lf)        Colleague_ID, LAST_NAME, FIRST_NAME, #(lf)        SEC_TERM, SEC_START_DATE, EMP_STATUS#(lf))#(lf)SELECT#(lf)    *,#(lf)    CASE WHEN Hours_Per_Week < 32 THEN 1 ELSE 0 END AS Under_Load_Indicator#(lf)FROM FINAL#(lf)ORDER BY #(lf)    FIRST_NAME, LAST_NAME, SEC_TERM, SEC_START_DATE;#(lf)#(lf)#(lf)#(lf)#(lf)#(lf)#(lf)#(lf)--WITH LAWSON AS (#(lf)--    SELECT DISTINCT ID, MAX(PERSON_ALT_IDS) AS Lawson_id#(lf)--    FROM PERSON_ALT#(lf)--    WHERE PERSON_ALT_ID_TYPES = 'LAWA'#(lf)--    GROUP BY ID#(lf)--),#(lf)--EL_GROUP AS (#(lf)--    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)--    FROM PERSON  #(lf)--    LEFT JOIN PERSON_LS ON PERSON.ID = PERSON_LS.ID#(lf)--    WHERE PERSON_LS.GROUPS LIKE 'El=%'#(lf)--),#(lf)--ST_GROUP AS (#(lf)--    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)--    FROM PERSON  #(lf)--    LEFT JOIN PERSON_LS ON PERSON.ID = PERSON_LS.ID#(lf)--    WHERE UPPER(PERSON_LS.GROUPS) LIKE '%FT' OR UPPER(PERSON_LS.GROUPS) LIKE '%PT'#(lf)--),#(lf)--JD_GROUP AS (#(lf)--    SELECT PERSON.ID, PERSON_LS.GROUPS#(lf)--    FROM PERSON  #(lf)--    LEFT JOIN PERSON_LS ON PERSON.ID = PERSON_LS.ID#(lf)--    WHERE PERSON_LS.GROUPS LIKE 'Jd=%'#(lf)--),#(lf)--MAX_SEC_CONTACT AS (#(lf)--    SELECT COURSE_SECTIONS_ID, MAX(SEC_CONTACT_HOURS) AS SEC_CONTACT_HOURS#(lf)--    FROM SEC_CONTACT#(lf)--    GROUP BY COURSE_SECTIONS_ID#(lf)--),#(lf)--ACTIVE_STUDENTS AS (#(lf)--    SELECT COURSE_SECTIONS.COURSE_SECTIONS_ID, COUNT(STUDENT_COURSE_SEC.SCS_STUDENT) AS ACTIVE_STUDENT_COUNT#(lf)--    FROM COURSE_SECTIONS#(lf)--    INNER JOIN SEC_STATUSES#(lf)--        ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_STATUSES.COURSE_SECTIONS_ID#(lf)--        AND SEC_STATUSES.POS = 1#(lf)--    INNER JOIN STUDENT_COURSE_SEC  #(lf)--        ON STUDENT_COURSE_SEC.SCS_COURSE_SECTION = COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)--    INNER JOIN STC_STATUSES#(lf)--        ON STC_STATUSES.STUDENT_ACAD_CRED_ID = STUDENT_COURSE_SEC.SCS_STUDENT_ACAD_CRED#(lf)--        AND STC_STATUSES.POS = 1#(lf)--    WHERE STC_STATUSES.STC_STATUS IN ('N', 'A')#(lf)--        AND SEC_STATUSES.SEC_STATUS = 'A'#(lf)--    GROUP BY COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)--),#(lf)--TERM_SET AS (#(lf)--    SELECT TOP 6 TERMS_ID#(lf)--    FROM TERMS#(lf)--    WHERE RIGHT(TERMS_ID, 1) = 'Q'#(lf)--        AND TERM_START_DATE < GETDATE()#(lf)--        AND TERM_START_DATE >= DATEADD(MONTH, -21, GETDATE())#(lf)--    ORDER BY TERM_START_DATE DESC#(lf)--),#(lf)--MAIN AS (#(lf)--    SELECT#(lf)--        IsNull(COURSE_SECTIONS.SEC_LOCATION, 'ONL') AS SEC_LOC,#(lf)--        l.LOC_DESC AS SectionLocation,#(lf)--        LR.LOCATION_REGIONS_ID,#(lf)--        LR.LOCR_DESC,#(lf)--        COALESCE(PERSON.LAST_NAME, 'n/a') AS LAST_NAME,#(lf)--        COALESCE(PERSON.FIRST_NAME, 'n/a') AS FIRST_NAME,#(lf)--        COURSE_SEC_FACULTY.CSF_FACULTY AS Colleague_ID,#(lf)--        LAWSON.Lawson_id,#(lf)--        COURSE_SEC_FACULTY.CSF_FACULTY_LOAD,#(lf)--        COURSE_SECTIONS.SEC_NAME,#(lf)--        COURSE_SECTIONS.SEC_SHORT_TITLE,#(lf)--        SEC_CONTACT.SEC_CONTACT_HOURS,#(lf)--        COURSE_SECTIONS.SEC_NO_WEEKS,#(lf)--        COURSE_SECTIONS.SEC_START_DATE,#(lf)--        COURSE_SECTIONS.SEC_END_DATE,#(lf)--        COURSE_SECTIONS.SEC_SUBJECT,#(lf)#(lf)--        SEC_CONTACT.SEC_CONTACT_HOURS * (COURSE_SEC_FACULTY.CSF_FACULTY_LOAD * 0.01) AS Hours_Teaching,#(lf)--        SEC_CONTACT.SEC_CONTACT_HOURS * (COURSE_SEC_FACULTY.CSF_FACULTY_LOAD * 0.01)#(lf)--        * CASE#(lf)--            WHEN SEC_SUBJECT IN ('WKLD', 'SERVICE') THEN 0.0#(lf)--            WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) IN ('L','C') THEN 0.25#(lf)--            ELSE 1.0#(lf)--        END AS Hours_Prep_Time,#(lf)--        CASE#(lf)--            WHEN COURSE_SEC_FACULTY.CSF_INSTR_METHOD = 'WRK' THEN 'Workload - No Prep'#(lf)--            WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) = 'L' THEN 'Lab'#(lf)--            WHEN RIGHT(COURSE_SECTIONS.SEC_COURSE_NO, 1) = 'C' THEN 'Clinical'#(lf)--            ELSE 'Theory'#(lf)--        END AS CourseType,#(lf)--        CASE#(lf)--            WHEN DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE) = 7 THEN 8#(lf)--            WHEN DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE) = 11 THEN 12#(lf)--            ELSE DATEDIFF(wk, COURSE_SECTIONS.SEC_START_DATE, COURSE_SECTIONS.SEC_END_DATE)#(lf)--        END AS Weeks,#(lf)--        COURSE_SECTIONS.SEC_TERM,#(lf)--        PERSON.OCCUPATION,#(lf)--        REPLACE(EL_GROUP.GROUPS, 'El=', '') AS EMP_LOCATION,#(lf)--        REPLACE(ST_GROUP.GROUPS, 'Stat=', '') AS EMP_STATUS,#(lf)--        REPLACE(JD_GROUP.GROUPS, 'Jd=', '') AS EMP_JOB_DESCRIPTION,#(lf)--        ACTIVE_STUDENTS.ACTIVE_STUDENT_COUNT AS SEC_ACTIVE_STUDENT_COUNT,#(lf)--        COURSE_SEC_FACULTY.CSF_TEACHING_ARRANGEMENT,#(lf)--        VALS.VAL_EXTERNAL_REPRESENTATION,#(lf)--        ACTIVE_STUDENTS.ACTIVE_STUDENT_COUNT,#(lf)--        COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)--    FROM COURSE_SECTIONS#(lf)--    INNER JOIN TERM_SET ON COURSE_SECTIONS.SEC_TERM = TERM_SET.TERMS_ID#(lf)--    INNER JOIN SEC_STATUSES#(lf)--        ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_STATUSES.COURSE_SECTIONS_ID#(lf)--        AND SEC_STATUSES.POS = 1#(lf)--        AND SEC_STATUSES.SEC_STATUS = 'A'#(lf)--    LEFT JOIN COURSE_SEC_FACULTY#(lf)--        ON COURSE_SECTIONS.COURSE_SECTIONS_ID = COURSE_SEC_FACULTY.CSF_COURSE_SECTION#(lf)--    LEFT JOIN ACTIVE_STUDENTS ON ACTIVE_STUDENTS.COURSE_SECTIONS_ID = COURSE_SECTIONS.COURSE_SECTIONS_ID#(lf)--    LEFT JOIN MAX_SEC_CONTACT SEC_CONTACT ON COURSE_SECTIONS.COURSE_SECTIONS_ID = SEC_CONTACT.COURSE_SECTIONS_ID#(lf)--    LEFT JOIN PERSON ON COURSE_SEC_FACULTY.CSF_FACULTY = PERSON.ID#(lf)--    LEFT JOIN LAWSON ON COURSE_SEC_FACULTY.CSF_FACULTY = LAWSON.ID#(lf)--    LEFT JOIN EL_GROUP ON PERSON.ID = EL_GROUP.ID#(lf)--    LEFT JOIN ST_GROUP ON PERSON.ID = ST_GROUP.ID#(lf)--    LEFT JOIN JD_GROUP ON PERSON.ID = JD_GROUP.ID#(lf)--    LEFT JOIN VALS ON COURSE_SEC_FACULTY.CSF_TEACHING_ARRANGEMENT = VALS.VAL_MINIMUM_INPUT_STRING#(lf)--        AND VALS.VALCODE_ID = 'TEACHING.ARRANGEMENTS'#(lf)--    JOIN LOCATIONS l ON l.LOCATIONS_ID = IsNull(COURSE_SECTIONS.SEC_LOCATION, 'ONL')#(lf)--    JOIN LOCATION_REGIONS LR ON LR.LOCATION_REGIONS_ID = l.LOC_REGION#(lf)--    WHERE COURSE_SEC_FACULTY.CSF_FACULTY <> 1050541#(lf)--),#(lf)--FINAL AS (#(lf)--    SELECT  #(lf)--        Colleague_ID, LAST_NAME, FIRST_NAME,#(lf)--        STRING_AGG(SEC_NAME, ', ') AS Course,#(lf)--        SEC_TERM, SEC_START_DATE,#(lf)--        SUM((Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0)) AS Hours_Per_Week,#(lf)--        SUM(CASE WHEN SEC_SUBJECT = 'WKLD' THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS WKLD_HOURS,#(lf)--        SUM(CASE WHEN SEC_SUBJECT = 'SRVC' THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS SERVICE_HOURS,#(lf)--        SUM(CASE WHEN SEC_SUBJECT NOT IN ( 'SRVC') THEN (Hours_Teaching + Hours_Prep_Time) / NULLIF(Weeks, 0) END) AS CONTACT_AND_PREP_HOURS,#(lf)--        SUM(CASE WHEN SEC_SUBJECT NOT IN ('WKLD', 'SRVC') THEN Hours_Teaching / NULLIF(Weeks, 0) END) AS CONTACT_HOURS,#(lf)--        SUM(CASE WHEN SEC_SUBJECT NOT IN ('WKLD', 'SRVC') THEN Hours_Prep_Time / NULLIF(Weeks, 0) END) AS PREP_HOURS,#(lf)--        EMP_STATUS#(lf)--    FROM MAIN#(lf)--    GROUP BY Colleague_ID, LAST_NAME, FIRST_NAME, SEC_TERM, SEC_START_DATE, EMP_STATUS#(lf)--)#(lf)--SELECT *,#(lf)--    CASE WHEN Hours_Per_Week < 32 THEN 1 ELSE 0 END AS Under_Load_Indicator#(lf)--FROM FINAL#(lf)--ORDER BY FIRST_NAME, LAST_NAME, SEC_TERM, SEC_START_DATE;#(lf)#(lf)"]),
				    #"Filtered Rows" = Table.SelectRows(Source, each true)
				in
				    #"Filtered Rows"

	annotation PBI_ResultType = Table

	annotation PBI_NavigationStepName = Navigation

