table 'Active Students 2Y'
	lineageTag: e89b717e-4540-410a-ab8c-4e6d43ab5cec

	measure 'Active Student Count 2Y' = DISTINCTCOUNT('Active Students 2Y'[STUDENT_ID])
		formatString: 0
		lineageTag: e1b33255-cc74-4903-8052-f384d31fa2a6

	measure FirstGen2Y =
			
			VAR TotalStudents = CALCULATE(DISTINCTCOUNT('Active Students 2Y'[STUDENT_ID]),'Active Students 2Y'[FIRST_GEN_CHECK]<>BLANK())
			VAR FirstGenStudents = CALCULATE(DISTINCTCOUNT('Active Students 2Y'[STUDENT_ID]),'Active Students 2Y'[FIRST_GEN_CHECK]="Y")
			RETURN
			DIVIDE(FirstGenStudents,TotalStudents,0)
		formatString: 0.00%;-0.00%;0.00%
		lineageTag: 4b600b49-1530-49bf-b20b-bdcb3f81f253

	measure User = USERNAME()
		lineageTag: 6fffdc38-5d14-45c0-afb0-275d1415783b

	column STUDENT_ID
		dataType: string
		lineageTag: f2003566-8538-4b38-bc87-9013b67e5bae
		summarizeBy: none
		sourceColumn: STUDENT_ID

		annotation SummarizationSetBy = Automatic

	column PROGRAM_ID
		dataType: string
		lineageTag: a966e9ad-b9db-430a-ad05-e0176f577c7b
		summarizeBy: none
		sourceColumn: PROGRAM_ID

		annotation SummarizationSetBy = Automatic

	column MOST_RECENT_PROGRAM
		dataType: int64
		formatString: 0
		lineageTag: 554b60fa-5c58-42a7-968d-ef7ff754263f
		summarizeBy: sum
		sourceColumn: MOST_RECENT_PROGRAM

		annotation SummarizationSetBy = Automatic

	column STUDENT_PROGRAMS_ID
		dataType: string
		lineageTag: 20010d9a-3c6c-4a53-a5fc-238e702ecc5d
		summarizeBy: none
		sourceColumn: STUDENT_PROGRAMS_ID

		annotation SummarizationSetBy = Automatic

	column STPR_LOCATION
		dataType: string
		lineageTag: d609e773-575e-4370-bfa5-4eaf1b9f7fd8
		summarizeBy: none
		sourceColumn: STPR_LOCATION

		annotation SummarizationSetBy = Automatic

	column STPR_ADMIT_STATUS
		dataType: string
		lineageTag: 100586cd-c19b-4549-8336-9efd1ed570ac
		summarizeBy: none
		sourceColumn: STPR_ADMIT_STATUS

		annotation SummarizationSetBy = Automatic

	column STPR_STATUS
		dataType: string
		lineageTag: 70c0dfae-e455-40f6-8319-b99fbf8d58cf
		summarizeBy: none
		sourceColumn: STPR_STATUS

		annotation SummarizationSetBy = Automatic

	column STPR_STATUS_DATE
		dataType: dateTime
		formatString: General Date
		lineageTag: 6d899b8c-12ad-4b6d-8156-c71a3e89f194
		summarizeBy: none
		sourceColumn: STPR_STATUS_DATE

		variation Variation
			isDefault
			relationship: c0c69f26-de7b-4133-898f-2fa3607c6a46
			defaultHierarchy: LocalDateTable_cccad276-6f64-4d31-b27a-691710153497.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column STPR_START_DATE
		dataType: dateTime
		formatString: General Date
		lineageTag: ee10c523-087a-475c-92c1-a5676f3445bb
		summarizeBy: none
		sourceColumn: STPR_START_DATE

		variation Variation
			isDefault
			relationship: 20c301f4-a106-4f6b-8a1d-ecf290840dd3
			defaultHierarchy: LocalDateTable_410e1ff4-54db-42c8-a9b9-b160fb4bdf3d.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column STPR_END_DATE
		dataType: dateTime
		formatString: General Date
		lineageTag: b8e1348e-94e0-4f8d-b223-48c6138ad674
		summarizeBy: none
		sourceColumn: STPR_END_DATE

		variation Variation
			isDefault
			relationship: 7d3d53d9-e731-4281-8437-642e1b78c47a
			defaultHierarchy: LocalDateTable_9c0b6ec7-cb8b-4759-bcbb-6aa5a859607c.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column ProgramStatus
		dataType: string
		lineageTag: c6cfb8a4-aca0-4a77-bd85-83de714f7720
		summarizeBy: none
		sourceColumn: ProgramStatus

		annotation SummarizationSetBy = Automatic

	column Next_STPR_STATUS_DATE
		dataType: dateTime
		formatString: General Date
		lineageTag: 1667b808-4044-4dc5-be90-de9ff01bfe8e
		summarizeBy: none
		sourceColumn: Next_STPR_STATUS_DATE

		variation Variation
			isDefault
			relationship: d2054aa6-3a09-4bbd-b24a-dd6acc992f06
			defaultHierarchy: LocalDateTable_d0051ad9-f5c9-4fec-a6f4-94ecfc8b9525.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column LOC_DESC
		dataType: string
		lineageTag: 7fe4afc2-2caf-43ae-9087-e874f45c0ea7
		summarizeBy: none
		sourceColumn: LOC_DESC

		annotation SummarizationSetBy = Automatic

	column FIRST_NAME
		dataType: string
		lineageTag: 704cbc47-8c6f-4b45-94bc-241a89a574f8
		summarizeBy: none
		sourceColumn: FIRST_NAME

		annotation SummarizationSetBy = Automatic

	column LAST_NAME
		dataType: string
		lineageTag: 3cf11d43-1973-46c5-95df-0ef014073dc0
		summarizeBy: none
		sourceColumn: LAST_NAME

		annotation SummarizationSetBy = Automatic

	column Year
		dataType: int64
		formatString: 0
		lineageTag: 3eb60ae3-4d65-4a70-b0ee-8d1bfd3c11cf
		summarizeBy: sum
		sourceColumn: Year

		annotation SummarizationSetBy = Automatic

	column ReportDate
		dataType: dateTime
		formatString: Mm/dd/yyyy
		lineageTag: 381e4a40-ff21-451b-9932-4f5050fd68c1
		summarizeBy: none
		sourceColumn: ReportDate

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isCustom":true}

	column FIRST_GEN_CHECK
		dataType: string
		lineageTag: aa517c87-cf96-46d9-9d04-b4accc5f066d
		summarizeBy: none
		sourceColumn: FIRST_GEN_CHECK

		annotation SummarizationSetBy = Automatic

	column 'Diversity.Age2Y'
		dataType: int64
		formatString: 0
		lineageTag: 59aec4a2-a390-43eb-bfa3-c90a0f6f0ed5
		summarizeBy: sum
		sourceColumn: Diversity.Age2Y

		annotation SummarizationSetBy = Automatic

	column GENDER
		dataType: string
		lineageTag: ff19f170-f14e-454f-9ec3-38610937ce63
		summarizeBy: none
		sourceColumn: GENDER

		annotation SummarizationSetBy = Automatic

	column IPEDS_RACE_ETHNIC_DESC
		dataType: string
		lineageTag: ee392c80-0ec0-481e-bdcb-7462934950c5
		summarizeBy: none
		sourceColumn: IPEDS_RACE_ETHNIC_DESC

		annotation SummarizationSetBy = Automatic

	partition 'Active Students 2Y' = m
		mode: import
		queryGroup: Students
		source =
				let
				    Source = Sql.Database("rpt2-prod.ec.galencollege.edu", "coll18_repl_production", [Query="--for one year in the past: #(lf)/*#(lf)need to put date one year ago between STPR_START_DATE AND STPR_END_DATE#(lf)need to remove STPR_STATUS POS filter. Need to view historical statuses. #(lf)Possible solution to choose correct status? Take the LEAD(STPR_STATUS) OVER (PARTITION BY STUDNET_PROGRAMS_ID ORDER BY STPR_STATUS DATE DESC) as Next_STPR_STATUS_DATE#(lf)Then, join where @lastyear between STPR_STATUS_DATE and Next_STPR_STATUS_DATE. Finally, filter to active students. This should give you active 1 year ago. #(lf)*/#(lf)DECLARE @LASTYEAR DATE = DATEADD(YEAR, -2, GETDATE())#(lf)--SELECT COUNT(*) FROM STPR_DATES#(lf)--WHERE  @LASTYEAR BETWEEN STPR_START_DATE AND STPR_END_DATE#(lf)--AND POS = 1#(lf);WITH StudentProgram#(lf)AS (#(lf)#(tab)SELECT LEFT(SP.STUDENT_PROGRAMS_ID, 7) STUDENT_ID#(lf)#(tab)#(tab),RIGHT(SP.STUDENT_PROGRAMS_ID, LEN(SP.STUDENT_PROGRAMS_ID) - 8) PROGRAM_ID#(lf)#(tab)#(tab),ROW_NUMBER() OVER (#(lf)#(tab)#(tab)#(tab)PARTITION BY LEFT(SP.STUDENT_PROGRAMS_ID, 7) ORDER BY D.STPR_START_DATE DESC#(lf)#(tab)#(tab)#(tab)) MOST_RECENT_PROGRAM#(lf)#(tab)#(tab),SP.STUDENT_PROGRAMS_ID#(lf)#(tab)#(tab),SP.STPR_LOCATION#(lf)#(tab)#(tab),SP.STPR_ADMIT_STATUS#(lf)#(tab)#(tab),SPS.STPR_STATUS#(lf)#(tab)#(tab),SPS.STPR_STATUS_DATE#(lf)#(tab)#(tab),D.STPR_START_DATE#(lf)#(tab)#(tab),D.STPR_END_DATE#(lf)#(tab)#(tab),V.VAL_EXTERNAL_REPRESENTATION ProgramStatus#(lf)#(tab)#(tab),COALESCE(LEAD(STPR_STATUS_DATE) OVER (PARTITION BY SP.STUDENT_PROGRAMS_ID ORDER BY STPR_STATUS_DATE ASC), GETDATE()) as Next_STPR_STATUS_DATE#(lf)#(tab)#(tab)--,COALESCE(LEAD(STPR_STATUS) OVER (PARTITION BY STUDENT_PROGRAMS_ID ORDER BY STPR_STATUS_DATE ASC), GETDATE()) as Next_STPR_STATUS_DATE#(lf)#(tab)FROM STUDENT_PROGRAMS SP#(lf)#(tab)LEFT JOIN STPR_DATES D ON SP.STUDENT_PROGRAMS_ID = D.STUDENT_PROGRAMS_ID#(lf)#(tab)#(tab)AND D.POS = 1#(lf)#(tab)LEFT JOIN STPR_STATUSES SPS ON SP.STUDENT_PROGRAMS_ID = SPS.STUDENT_PROGRAMS_ID#(lf)#(tab)#(tab)--AND SPS.POS = 1#(lf)#(tab)LEFT JOIN VALS V ON SPS.STPR_STATUS = V.VAL_INTERNAL_CODE#(lf)#(tab)#(tab)AND V.VALCODE_ID = 'STUDENT.PROGRAM.STATUSES'#(lf)#(tab)WHERE 1 = 1#(lf)#(tab)--AND @LASTYEAR BETWEEN STPR_START_DATE AND STPR_END_DATE#(lf)#(tab))#(lf)#(tab)#(lf)#(tab),#(lf)#(tab)ACCEPTABLE_TERMS AS#(lf)#(tab)(#(lf)#(tab)#(tab)SELECT CASE WHEN @LASTYEAR BETWEEN CT.TERM_START_DATE AND CT.TERM_END_DATE#(lf)#(tab)#(tab)THEN CT.TERMS_ID#(lf)#(tab)#(tab)ELSE PT.PREV_TERM END TERM_TO_BE_USED#(lf)#(tab)#(tab)FROM TERMS CT#(lf)#(tab)#(tab)INNER JOIN (#(lf)#(tab)#(tab)#(tab)SELECT  TERMS_ID,#(lf)#(tab)#(tab)#(tab)LAG(TERMS_ID) OVER (ORDER BY TERM_START_DATE) PREV_TERM, #(lf)#(tab)#(tab)#(tab) LAG(TERM_END_DATE) OVER (ORDER BY TERM_START_DATE) PREV_END_DATE#(lf)#(tab)#(tab)#(tab)FROM TERMS#(lf)#(tab)#(tab)#(tab)WHERE RIGHT(TERMS_ID, 1) = 'Q'#(lf)#(tab)#(tab)#(tab)#(tab))PT ON CT.TERMS_ID = PT.TERMS_ID#(lf)#(tab)#(tab)WHERE RIGHT(CT.TERMS_ID, 1) = 'Q'#(lf)#(tab)#(tab)AND @LASTYEAR BETWEEN PT.PREV_END_DATE AND CT.TERM_END_DATE#(lf)#(tab)#(tab)UNION#(lf)#(tab)#(tab)SELECT TERMS_ID TERM_TO_BE_USED#(lf)#(tab)#(tab)FROM TERMS#(lf)#(tab)#(tab)WHERE @LASTYEAR BETWEEN TERM_START_DATE AND TERM_END_DATE#(lf)#(tab)),#(lf)#(tab)--SELECT * FROM ACCEPTABLE_TERMS#(lf)ENROLLED_IN_CLASS AS (#(lf)#(tab)SELECT DISTINCT SCS_STUDENT #(lf)#(tab)FROM STUDENT_COURSE_SEC SCS#(lf)#(tab)INNER JOIN STC_STATUSES STC ON SCS.SCS_STUDENT_ACAD_CRED = STC.STUDENT_ACAD_CRED_ID AND STC.POS = 1#(lf)#(tab)INNER JOIN COURSE_SECTIONS CS ON SCS.SCS_COURSE_SECTION = CS.COURSE_SECTIONS_ID#(lf)#(tab)INNER JOIN ACCEPTABLE_TERMS T ON CS.SEC_TERM = T.TERM_TO_BE_USED#(lf)#(tab)WHERE STC.STC_STATUS IN ('A','N')#(lf)),#(lf)Ethnicity AS (SELECT DISTINCT STUDENT_ID, IPEDS_RACE_ETHNIC_DESC #(lf)FROM STUDENT_ACAD_PROGRAMS_VIEW WITH (NOLOCK))#(lf)#(lf)--Possible solution to choose correct status? Take the LEAD(STPR_STATUS) OVER (PARTITION BY STUDNET_PROGRAMS_ID ORDER BY STPR_STATUS DATE DESC) as Next_STPR_STATUS_DATE#(lf)SELECT * FROM (#(lf)SELECT SP.*, L.LOC_DESC, P.FIRST_NAME, P.LAST_NAME, @LASTYEAR ReportDate, YEAR(@LASTYEAR) Year, DATEDIFF(yy, P.BIRTH_DATE, @LASTYEAR) Age, P.GENDER , E.IPEDS_RACE_ETHNIC_DESC #(lf)FROM StudentProgram SP#(lf)LEFT JOIN LOCATIONS L ON SP.STPR_LOCATION = L.LOCATIONS_ID#(lf)INNER JOIN PERSON P ON SP.STUDENT_ID = P.ID#(lf)INNER JOIN ENROLLED_IN_CLASS EIC ON SP.STUDENT_ID = EIC.SCS_STUDENT#(lf)LEFT JOIN Ethnicity E ON E.STUDENT_ID = SP.STUDENT_ID#(lf)) A#(lf)WHERE @LASTYEAR BETWEEN STPR_STATUS_DATE and Next_STPR_STATUS_DATE#(lf)AND STPR_STATUS = 'A'#(lf)--AND STPR_START_DATE <= GETDATE()#(lf)--AND PROGRAM_ID IN (@program)#(lf)--AND STPR_LOCATION IN (@campus)"]),
				    #"Merged Queries1" = Table.NestedJoin(Source, {"STUDENT_ID"}, Diversity_FirstGen, {"studentId"}, "Diversity_FirstGen", JoinKind.LeftOuter),
				    #"Expanded Diversity_FirstGen" = Table.ExpandTableColumn(#"Merged Queries1", "Diversity_FirstGen", {"FIRST_GEN_CHECK"}, {"FIRST_GEN_CHECK"}),
				    #"Replaced Value1" = Table.ReplaceValue(#"Expanded Diversity_FirstGen",null,"N/A",Replacer.ReplaceValue,{"GENDER"}),
				    #"Renamed Columns" = Table.RenameColumns(#"Replaced Value1",{{"Age", "Diversity.Age2Y"}})
				in
				    #"Renamed Columns"

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

